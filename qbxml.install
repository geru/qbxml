<?php
// $Id$

/**
 * @file
 * Install, update and uninstall functions for the qbxml module
 *
 * Download the schema module to auto-generate a schema array for a table:
 * http://drupal.org/project/schema.
 *
 */

/**
 * Implements hook_schema().
 */
function qbxml_schema() {
  $schema['qbxml'] = array(
    'description' => 'qbxml database of incoming and outgoing queries and responses',
    'fields' => array(
      'rid' => array(
        'description' => 'unique request ID for each outgoing and incoming message set',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'gid' => array(
        'description' => 'owner / first rid of group',
        'type' => 'int',
        'default' => 0,
      ),
      'bookid' => array(
        'description' => 'book machine id',
        'type' => 'int',
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when this request was created.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'sent' => array(
        'description' => 'The Unix timestamp when this request was created.',
        'type' => 'int',
        'not null' => FALSE,
        'default' => 0,
      ),
      'state' => array(
        'description' => 'State of request',
        'type' => 'varchar', // states are one-letter codes defined in qbxml.inc
        'length' => 1,
        'default' => QBXML_STATE_QUEUED,
      ),
      'ticket' => array(
        'description' => 'existing ticket -- ssh-encoded session ID',
        'type' => 'varchar',
        'length' => 36,
        'default' => NULL,
      ),
      'data' => array(
        'description' => 'Requests and other information get stashed in JSON-encoded array',
        'type' => 'blob',
        'size' => 'big',
      ),
    ),
    'primary key' => array('rid'),
    'indexes' => array('group_id' => array('gid'), 'bookid' => array('bookid')),
  );
  return ($schema);
}